# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

# Use docker provider by default (i.e. without specifying --provider on command line)
ENV['VAGRANT_DEFAULT_PROVIDER'] = 'docker'

# Disable parallelism if provider supports it
ENV['VAGRANT_NO_PARALLEL'] = 'yes'

# Base Docker Image
BASE_IMAGE = "myalpine:0.2"

# Number of (Edge) nodes
node_count = 1  
if ENV['NODE_COUNT']
  node_count = ENV['NODE_COUNT'].to_i  
end

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

  # Build Base Image
  #config.vm.provider "docker" do |d0|
  #  d0.build_dir = "."
  #  d0.dockerfile = "Dockerfile"
  #  d0.build_args = ["--no-cache", "--tag", BASE_IMAGE]
  #end
  
  # Create 'n' nodes
  (1..node_count).each do |i|
    config.vm.define "node#{i}" do |subconfig|
      subconfig.vm.hostname = "node#{i}"
      subconfig.vm.network :forwarded_port, guest: 22, host: "#{2200 + i}".to_i, id: "ssh", auto_correct: true
      subconfig.vm.provider "docker" do |d|
        d.name = "node#{i}"
        d.image = BASE_IMAGE
        #d.ports = [ "127.0.0.1:2200:22" ]
        d.privileged = true  # Required for "docker in docker"
        d.has_ssh = true     # Required for provisioning and 'vagrant ssh' to work.
      end
    end
  end

  config.ssh.username = "root"
  config.ssh.password = "root"
  
  #config.vm.network "forwarded_port", guest: 8080, host: 8080

  #config.vm.provision "docker" do |d|
  #  d.pull_images "mysql:latest"
  #  d.run "mysql", args: "-e MYSQL_ROOT_PASSWORD=insecure", image: "mysql:latest"
  #end
end
